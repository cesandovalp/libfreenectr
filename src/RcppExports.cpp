// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// CreateSimpleDevice
SEXP CreateSimpleDevice();
RcppExport SEXP _libfreenect_CreateSimpleDevice() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(CreateSimpleDevice());
    return rcpp_result_gen;
END_RCPP
}
// SetTiltDegrees
void SetTiltDegrees(SEXP device, int angle);
RcppExport SEXP _libfreenect_SetTiltDegrees(SEXP deviceSEXP, SEXP angleSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type device(deviceSEXP);
    Rcpp::traits::input_parameter< int >::type angle(angleSEXP);
    SetTiltDegrees(device, angle);
    return R_NilValue;
END_RCPP
}
// GetAccelerometers
NumericVector GetAccelerometers(SEXP device);
RcppExport SEXP _libfreenect_GetAccelerometers(SEXP deviceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type device(deviceSEXP);
    rcpp_result_gen = Rcpp::wrap(GetAccelerometers(device));
    return rcpp_result_gen;
END_RCPP
}
// GetTiltDegrees
double GetTiltDegrees(SEXP device);
RcppExport SEXP _libfreenect_GetTiltDegrees(SEXP deviceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type device(deviceSEXP);
    rcpp_result_gen = Rcpp::wrap(GetTiltDegrees(device));
    return rcpp_result_gen;
END_RCPP
}
// SetLed
void SetLed(SEXP device, std::string status);
RcppExport SEXP _libfreenect_SetLed(SEXP deviceSEXP, SEXP statusSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type device(deviceSEXP);
    Rcpp::traits::input_parameter< std::string >::type status(statusSEXP);
    SetLed(device, status);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_libfreenect_CreateSimpleDevice", (DL_FUNC) &_libfreenect_CreateSimpleDevice, 0},
    {"_libfreenect_SetTiltDegrees", (DL_FUNC) &_libfreenect_SetTiltDegrees, 2},
    {"_libfreenect_GetAccelerometers", (DL_FUNC) &_libfreenect_GetAccelerometers, 1},
    {"_libfreenect_GetTiltDegrees", (DL_FUNC) &_libfreenect_GetTiltDegrees, 1},
    {"_libfreenect_SetLed", (DL_FUNC) &_libfreenect_SetLed, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_libfreenect(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
